import parsedates as p
import Parser_ts  as dt_parse
import datetime as d

to numpy.testing import *

p.set_callback(dt_parse.DateTimeFromString)

# These tests are for checking frequency conversions
# meant for the asfreq() function

class TestFreqConv():

	def test_zeroes(self):
	"Test Jan 1, 1970 for each frequency."
	
	########## Years ##########
		date1 = (0L, 'Y')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'Y')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## Months ##########
		date1 = (0L, 'M')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'M')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## Weeks  ##########
		date1 = (0L, 'W')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'W')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## B-Day  ##########
		date1 = (0L, 'B')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'B')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## Day    ##########
		date1 = (0L, 'D')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'D')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## Hour   ##########
		date1 = (0L, 'h')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'h')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## Minute ##########
		date1 = (0L, 'm')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'm')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## Second ##########
		date1 = (0L, 's')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 's')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## MSec   ##########
		date1 = (0L, 'ms')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ms')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## USec   ##########
		date1 = (0L, 'us')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'us')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## NSec   ##########
		date1 = (0L, 'ns')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ns')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## PSec   ##########
		date1 = (0L, 'ps')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'ps')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## FSec   ##########
		date1 = (0L, 'fs')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'fs')
		date2 = (0L, 'as')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
	########## ASec   ##########
		date1 = (0L, 'as')
		date2 = (0L, 'M')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'W')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'B')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'D')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'h')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'm')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 's')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'ms')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'us')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'ns')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'ps')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'fs')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])
		date1 = (0L, 'as')
		date2 = (0L, 'Y')
		assert_equal(p.convert_freq(date1[0], date1[1], date2[1]), date2[0])

	def test_to_year(self):    
		"Test frequency conversions to years."
        date1 = (-23520L, 'M')
        date2 = (-1960L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-11617L, 'M')
        date2 = (-969L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-2629L, 'M')
        date2 = (-220L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-6L, 'M')
        date2 = (-1L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2L, 'M')
        date2 = (0L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (131L, 'M')
        date2 = (10L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (487L, 'M')
        date2 = (40L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1591L, 'M')
        date2 = (132L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (39L, 'Y')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (39L, 'Y')
        
	def test_to_month(self):	
		"Test frequency conversions to months."
		assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1960L, 'Y')
        date2 = (-23520L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-11617L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-2629L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-6L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (2L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (131L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (487L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (1591L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (475L, 'M')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_week(self):
		"Test frequency conversions to weeks."
        date1 = (-1960L, 'Y')
        date2 = (-102268L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-50508L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-11427L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-26L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (9L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (570L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (2118L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (6918L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (2065L, 'W')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_business(self):
		"Test frequency conversions to business days."
        date1 = (-1960L, 'Y')
        date2 = (-511339L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-252541L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-57135L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-132L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (41L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (2848L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (10586L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (34588L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (10326L, 'B')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_day(self):
		"Test frequency conversions to days."
        date1 = (-1960L, 'Y')
        date2 = (-715875L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-353557L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-79989L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-184L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (59L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (3988L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (14822L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (48424L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (14457L, 'D')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_hour(self):
		"Test frequency conversions to hours."
        date1 = (-1960L, 'Y')
        date2 = (-17181000L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-8485368L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-1919736L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-4416L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (1416L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (95712L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (355728L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (1162176L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (346968L, 'h')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_minute(self):
		"Test frequency conversions to minutes."
        date1 = (-1960L, 'Y')
        date2 = (-1030860000L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-509122080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-115184160L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-264960L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (84960L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (5742720L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (21343680L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (69730560L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (20818080L, 'm')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_second(self):
		"Test frequency conversions to seconds."
        date1 = (-1960L, 'Y')
        date2 = (-61851600000L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-30547324800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-6911049600L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-15897600L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (5097600L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (344563200L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (1280620800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (4183833600L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (1249084800L, 's')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_millisecond(self):
		"Test frequency conversions to milliseconds."
        date1 = (-1960L, 'Y')
        date2 = (-61851600000000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-30547324800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-6911049600000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-15897600000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (5097600000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (344563200000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (1280620800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (4183833600000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000000L, 'us')
        date2 = (1249084800000L, 'ms')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])


    def test_to_microsecond(self):
		"Test frequency conversions to microseconds."
        date1 = (-1960L, 'Y')
        date2 = (-61851600000000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-969L, 'Y')
        date2 = (-30547324800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-220L, 'Y')
        date2 = (-6911049600000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (-1L, 'Y')
        date2 = (-15897600000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (0L, 'Y')
        date2 = (5097600000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10L, 'Y')
        date2 = (344563200000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (40L, 'Y')
        date2 = (1280620800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (132L, 'Y')
        date2 = (4183833600000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (475L, 'M')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (2065L, 'W')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (10326L, 'B')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (14457L, 'D')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (346968L, 'h')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (20818080L, 'm')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800L, 's')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
        date1 = (1249084800000L, 'ms')
        date2 = (1249084800000000L, 'us')
        assert_equal(p.convert_freq(date1[0], date1[1], 'M'), date2[0])
