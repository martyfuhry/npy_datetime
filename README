Summer of Code Project 2009
Last modification to the README: 6/30/09

Directory Structure
--------------------
This is a pretty rough directory structure. The only real important code as of now is in the parsing directory.

|-- parsing
|   |-- Parser_orig.py
	The original parser for the mxDateTime Parsing Module.

|   |-- Parser_ts.py
	The modified parser taken directly from the TimeSeries module.

|   |-- c_parse.c
	This is the main parsing file. 

|   |-- old
|   |   |-- a.out
|   |   |-- str_to_int.c
|   |   `-- test_str.c
	Old attempts at getting callbacks and parsing to work. Nothing to see here.

|   |-- setup.py
	Initializes the c_parse.c code into the parsedates module. 

|   |-- test.py
	Examples on how to run the code and stuff

|   `-- test.pyc

Seting up the Parse Dates
--------------------
Navigate to the parsing directory, since the other code is unimportant as of now.

	$ cd parsing

Just like every other distutils:
	
	$ python setup.py build
	$ sudo python setup.py install

Or you can just navigate to the .so file generated by build and forgo installing it.

On Running This Code
--------------------
# The module is called parsedates
import parsedates as p

# Since the main goal of the parser is to use a Python program to parse, you need to set up the callback
import Parser_ts as dt_parse
p.set_callback(dt_parse.DateTimeFromString)

# Now you can actually parse dates
date = p.parse_date("01/01/1970", "D")

# date is a tuple: (long, string) where long is the number of string units since the epoch
# This was the easiest way to diagnose what was going on, since the datetime array scalar doesn't exist quite yet
